Allow for the entry point to be ideation. Between N different high temperature LLMs. 
    This would be fed back to the UI for a selection to be made. So I guess this would be a seperate agent?
------------------

The rubric evaluator needs more context (i forget what..) did we do this?

I've also made adjustments to how failure reasons (validation_error from execution, feedback from evaluation) are explicitly passed to the summarize_single_failure_node using the conditional edge mapping feature of LangGraph

Have a "think to self" node? If we can't get over the hump. To analyze past errors and current rubric. Maybe do this every time and add it to past history.
"What did I try, what could i add?"
To build up this history better. History of runs is probably going to be key to get good results

Give the video analyzer context that it can only see at N frames per second so it might not see transitions as well.

I think for this to be more useful we just need to have a more back and forth process in general. The rubric should also be a thing I agree on. 
Actually I just realized we should modify the rubric even if we don't have an enhancement. I don't think we should just rely on it to come up with something.
Remember what my actual process was. Ask AI to generate 2-3 different possible animation sequences. Then pick one. We should pass in the segment ofc but more crucially
we should pass in what should be animated. Then make a specific rubric based on that.

So i think the total flow should be, ideation as its own agent. Then we have the manim agent. The first call on this generates a rubric and asks us on the UI if it's okay or needs
changes. If it's okay it launches the process we have now with the added specificity of what to build. If it needs changes it loops until it's correct.

Through this process we can more easily shape what we want without giving it so much freedom to fail.



Any mistakes should be added to a file. We can then take this file and generate a token optimized version of it so that we can try to prevent them in the future.