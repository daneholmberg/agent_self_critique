import os
import pathlib
import dotenv

from config.base_config import PROJECT_ROOT, BASE_OUTPUT_DIR

# Load environment variables from .env file if it exists
# This is potentially redundant if base_config already loaded it, but ensures it's loaded.
dotenv.load_dotenv()

# Agent specific name
AGENT_NAME = "manim_agent"

# --- Manim Environment Variable Names ---
# These constants define the names of the environment variables used to configure Manim execution.
ENV_OUTPUT_SUBDIR = "MANIM_OUTPUT_SUBDIR"
ENV_TEMP_SCRIPT_SUBDIR = "MANIM_TEMP_SCRIPT_SUBDIR"
ENV_VIDEO_OUTPUT_RELATIVE_PATH = (
    "MANIM_VIDEO_OUTPUT_RELATIVE_PATH"  # Relative to the temp script dir where Manim runs
)
ENV_EXPECTED_VIDEO_FILENAME = "MANIM_EXPECTED_VIDEO_FILENAME"
ENV_QUALITY_FLAG = "MANIM_QUALITY_FLAG"  # Manim quality flag (e.g., -pql, -pqm, -pqh)
ENV_CONTEXT_FILE = "MANIM_CONTEXT_FILE"  # Path to the context file (relative to PROJECT_ROOT)
ENV_RUBRIC_FILE = "MANIM_RUBRIC_FILE"  # Path to the rubric file (relative to PROJECT_ROOT)
ENV_VIDEO_EVAL_MAX_SIZE_MB = "MANIM_VIDEO_EVAL_MAX_SIZE_MB"  # Max video size in MB for evaluation
ENV_GENERATED_SCENE_NAME = "MANIM_GENERATED_SCENE_NAME"  # Default scene name if not specified
ENV_SAVE_GENERATED_CODE = "MANIM_SAVE_GENERATED_CODE"  # Flag to save generated code per iteration

# --- Load Actual Manim Configuration Values ---
# Load configuration values from environment variables, falling back to defaults if not set.

# Subdirectory within BASE_OUTPUT_DIR for final Manim animations
OUTPUT_SUBDIR_NAME = os.getenv(ENV_OUTPUT_SUBDIR, "manim_animations")

# Subdirectory within BASE_OUTPUT_DIR for temporary Manim script files
TEMP_SCRIPT_SUBDIR_NAME = os.getenv(ENV_TEMP_SCRIPT_SUBDIR, "temp_manim_scripts")

# Manim's internal output path relative to where the script is executed (TEMP_SCRIPT_DIR).
# This needs careful handling as it depends on Manim's configuration/flags.
# Default assumes standard Manim output structure with -pql quality. Adjust if necessary.
MANIM_VIDEO_OUTPUT_RELATIVE_PATH = os.getenv(
    ENV_VIDEO_OUTPUT_RELATIVE_PATH, "media/videos/GeneratedScene/480p15"
)

# The expected filename of the video generated by Manim within its output directory.
EXPECTED_VIDEO_FILENAME = os.getenv(ENV_EXPECTED_VIDEO_FILENAME, "GeneratedScene.mp4")

# Manim quality flag (e.g., -pql for 480p15, -pqm for 720p30, -pqh for 1080p60)
MANIM_QUALITY_FLAG = os.getenv(ENV_QUALITY_FLAG, "-pql")

# Path to the context file providing background information for generation
CONTEXT_FILE_PATH = PROJECT_ROOT / os.getenv(ENV_CONTEXT_FILE, "context_docs/manim19.md")

# Path to the rubric file used for evaluating the generated Manim animation
RUBRIC_FILE_PATH = PROJECT_ROOT / os.getenv(ENV_RUBRIC_FILE, "context_docs/manim_rubric.txt")

# Maximum allowed size (in Megabytes) for the generated video during evaluation
VIDEO_EVAL_MAX_SIZE_MB = int(os.getenv(ENV_VIDEO_EVAL_MAX_SIZE_MB, "19"))

# The default name for the Manim Scene class to be generated if not provided in the request
GENERATED_SCENE_NAME = os.getenv(ENV_GENERATED_SCENE_NAME, "GeneratedScene")

# Flag to determine if generated code should be saved permanently per iteration
# Defaults to False (0). Set to 1 or true in .env to enable.
SAVE_GENERATED_CODE_DEFAULT = os.getenv(ENV_SAVE_GENERATED_CODE, "0").lower() in (
    "true",
    "1",
    "t",
)

# --- Derived Paths ---
# These paths are constructed based on the loaded configuration values.

# Final destination directory for the successfully generated Manim videos
FINAL_AGENT_OUTPUT_DIR = BASE_OUTPUT_DIR / OUTPUT_SUBDIR_NAME

# Directory where temporary Manim scripts (*.py) will be saved before execution
TEMP_SCRIPT_DIR = BASE_OUTPUT_DIR / TEMP_SCRIPT_SUBDIR_NAME

# --- Ensure Directories Exist ---
# Create the necessary output and temporary directories if they don't already exist.
FINAL_AGENT_OUTPUT_DIR.mkdir(parents=True, exist_ok=True)
TEMP_SCRIPT_DIR.mkdir(parents=True, exist_ok=True)

# --- Validation (Optional but Recommended) ---
# Add checks here if needed, e.g., ensure context/rubric files exist
if not CONTEXT_FILE_PATH.is_file():
    print(f"Warning: Manim context file not found at {CONTEXT_FILE_PATH}")
# Uncomment the following lines if the rubric file is mandatory
# if not RUBRIC_FILE_PATH.is_file():
#     # Consider raising an error or logging more severely if the rubric is critical
#     print(f"Warning: Manim rubric file not found at {RUBRIC_FILE_PATH}")

# You might want to add more validation here, e.g.:
# - Check if MANIM_QUALITY_FLAG is one of the expected values.
# - Ensure VIDEO_EVAL_MAX_SIZE_MB is a positive integer.
